import{_ as t,o as e,c as l,Q as s}from"./chunks/framework.34651007.js";const h=JSON.parse('{"title":"Enums","description":"","frontmatter":{},"headers":[],"relativePath":"concepts/enums.md","filePath":"concepts/enums.md"}'),a={name:"concepts/enums.md"},d=s('<h1 id="enums" tabindex="-1">Enums <a class="header-anchor" href="#enums" aria-label="Permalink to &quot;Enums&quot;">​</a></h1><p>For ease most options come in Enums to make selection simple and your IDE can type hint potential values. The package comes with a lot of Enums you can utilize but the main ones are below.</p><h2 id="alert-triggers" tabindex="-1">Alert Triggers <a class="header-anchor" href="#alert-triggers" aria-label="Permalink to &quot;Alert Triggers&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Enum</th><th style="text-align:left;">Value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">BeforeLoad</td><td style="text-align:left;">before_load</td><td style="text-align:left;">Triggers before a form is loaded, can only be triggered when form is locally loaded.</td></tr><tr><td style="text-align:left;">AfterLoad</td><td style="text-align:left;">after_load</td><td style="text-align:left;">Triggers after a form is loaded.</td></tr><tr><td style="text-align:left;">FailedLoad</td><td style="text-align:left;">failed_load</td><td style="text-align:left;">Triggers if a form fails to loaded.</td></tr><tr><td style="text-align:left;">BeforeProcessing</td><td style="text-align:left;">before_processing</td><td style="text-align:left;">Triggers before the api call for processing is made.</td></tr><tr><td style="text-align:left;">AfterProcessing</td><td style="text-align:left;">after_processing</td><td style="text-align:left;">Triggers after the api call for processing is made.</td></tr><tr><td style="text-align:left;">FailedValidation</td><td style="text-align:left;">failed_validation</td><td style="text-align:left;">Triggers when validation fails.</td></tr><tr><td style="text-align:left;">FailedProcessing</td><td style="text-align:left;">failed_processing</td><td style="text-align:left;">Triggers if the api call for processing fails other than validation.</td></tr><tr><td style="text-align:left;">SuccessProcessing</td><td style="text-align:left;">success_processing</td><td style="text-align:left;">Triggers if the api call for processing is successful.</td></tr><tr><td style="text-align:left;">Cancelled</td><td style="text-align:left;">cancelled</td><td style="text-align:left;">Triggers when a form is cancelled.</td></tr><tr><td style="text-align:left;">FormReset</td><td style="text-align:left;">form_reset</td><td style="text-align:left;">Triggers when a form is reset.</td></tr></tbody></table><h2 id="alert-types" tabindex="-1">Alert Types <a class="header-anchor" href="#alert-types" aria-label="Permalink to &quot;Alert Types&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Enum</th><th style="text-align:left;">Value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Success</td><td style="text-align:left;">success</td><td style="text-align:left;">Provides generic vuetify success theme styling.</td></tr><tr><td style="text-align:left;">Info</td><td style="text-align:left;">info</td><td style="text-align:left;">Provides generic vuetify info theme styling.</td></tr><tr><td style="text-align:left;">Warning</td><td style="text-align:left;">warning</td><td style="text-align:left;">Provides generic vuetify warning theme styling.</td></tr><tr><td style="text-align:left;">Error</td><td style="text-align:left;">error</td><td style="text-align:left;">Provides generic vuetify error theme styling.</td></tr></tbody></table><h2 id="button-types" tabindex="-1">Button Types <a class="header-anchor" href="#button-types" aria-label="Permalink to &quot;Button Types&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Enum</th><th style="text-align:left;">Value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Process</td><td style="text-align:left;">process</td><td style="text-align:left;">Process button for Input Forms.</td></tr><tr><td style="text-align:left;">Reset</td><td style="text-align:left;">reset</td><td style="text-align:left;">Reset button for Input Forms.</td></tr><tr><td style="text-align:left;">Cancel</td><td style="text-align:left;">cancel</td><td style="text-align:left;">Cancel button for Input Forms.</td></tr></tbody></table><h2 id="loader-events" tabindex="-1">Loader Events <a class="header-anchor" href="#loader-events" aria-label="Permalink to &quot;Loader Events&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Enum</th><th style="text-align:left;">Value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Loading</td><td style="text-align:left;">loading</td><td style="text-align:left;">Form is currently loading.</td></tr><tr><td style="text-align:left;">Loaded</td><td style="text-align:left;">loaded</td><td style="text-align:left;">Form has successfully loaded.</td></tr><tr><td style="text-align:left;">Results</td><td style="text-align:left;">results</td><td style="text-align:left;">Form has processing results.</td></tr><tr><td style="text-align:left;">Reset</td><td style="text-align:left;">reset</td><td style="text-align:left;">Form has been reset.</td></tr><tr><td style="text-align:left;">Cancelled</td><td style="text-align:left;">cancelled</td><td style="text-align:left;">Form has been cancelled.</td></tr><tr><td style="text-align:left;">Processing</td><td style="text-align:left;">processing</td><td style="text-align:left;">Form is currently processing.</td></tr><tr><td style="text-align:left;">Failed</td><td style="text-align:left;">failed</td><td style="text-align:left;">Form has failed to process.</td></tr><tr><td style="text-align:left;">Successful</td><td style="text-align:left;">successful</td><td style="text-align:left;">Form has successfully processed.</td></tr><tr><td style="text-align:left;">Updated</td><td style="text-align:left;">updated</td><td style="text-align:left;">Form has field data updated.</td></tr></tbody></table>',10),r=[d];function i(n,o,f,g,y,c){return e(),l("div",null,r)}const u=t(a,[["render",i]]);export{h as __pageData,u as default};
