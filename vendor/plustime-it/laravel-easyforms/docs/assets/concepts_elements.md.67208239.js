import{_ as t,o as e,c as l,Q as a}from"./chunks/framework.34651007.js";const g=JSON.parse('{"title":"Elements","description":"","frontmatter":{},"headers":[],"relativePath":"concepts/elements.md","filePath":"concepts/elements.md"}'),d={name:"concepts/elements.md"},r=a('<h1 id="elements" tabindex="-1">Elements <a class="header-anchor" href="#elements" aria-label="Permalink to &quot;Elements&quot;">​</a></h1><p>There are multiple types of elements to help keep the data structure strict for the frontend.</p><h2 id="icons" tabindex="-1">Icons <a class="header-anchor" href="#icons" aria-label="Permalink to &quot;Icons&quot;">​</a></h2><p>Icons are used in multiple components and elements and are the base for Action Icons.</p><div class="tip custom-block"><p class="custom-block-title">Props</p><p>Get a full list of props from <a href="https://vuetifyjs.com/en/components/icons/" target="_blank" rel="noreferrer">Vuetify V-Icons</a></p></div><h3 id="modified-or-custom-props" tabindex="-1">Modified or Custom Props <a class="header-anchor" href="#modified-or-custom-props" aria-label="Permalink to &quot;Modified or Custom Props&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>class</code></td><td style="text-align:center;">String</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Classes to add to Icon component</td></tr><tr><td style="text-align:left;"><code>tooltip</code></td><td style="text-align:center;">Tooltip</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Add Tooltip to Icon</td></tr></tbody></table><h2 id="alerts" tabindex="-1">Alerts <a class="header-anchor" href="#alerts" aria-label="Permalink to &quot;Alerts&quot;">​</a></h2><p>Style and Display a V-Alert with an <a href="./enums.html#alert-triggers">Alert Trigger</a> on a specific form action.</p><div class="tip custom-block"><p class="custom-block-title">Props</p><p>Get a full list of props from <a href="https://vuetifyjs.com/en/components/alerts/" target="_blank" rel="noreferrer">Vuetify V-Alerts</a></p></div><h3 id="modified-or-custom-props-1" tabindex="-1">Modified or Custom Props <a class="header-anchor" href="#modified-or-custom-props-1" aria-label="Permalink to &quot;Modified or Custom Props&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>auto_close_timer</code></td><td style="text-align:center;">Integer</td><td style="text-align:center;">0</td><td style="text-align:left;">Auto close alert timer in milliseconds.</td></tr><tr><td style="text-align:left;"><code>append_icon</code></td><td style="text-align:center;">Icon, undefined</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Append icon to alert.</td></tr><tr><td style="text-align:left;"><code>cols</code></td><td style="text-align:center;">Integer, String</td><td style="text-align:center;">12</td><td style="text-align:left;">How many cols the alert should spread.</td></tr><tr><td style="text-align:left;"><code>content_placeholder</code></td><td style="text-align:center;">String</td><td style="text-align:center;"><code>&lt;response-data&gt;</code></td><td style="text-align:left;">Placeholder to insert the response into alert body</td></tr><tr><td style="text-align:left;"><code>icon</code></td><td style="text-align:center;">Icon, undefined</td><td style="text-align:center;">undefined</td><td style="text-align:left;">This property is applied to <code>prepend_icon</code></td></tr><tr><td style="text-align:left;"><code>prepend_icon</code></td><td style="text-align:center;">Icon, undefined</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Prepend icon to alert.</td></tr><tr><td style="text-align:left;"><code>text</code></td><td style="text-align:center;">String</td><td style="text-align:center;">undefined</td><td style="text-align:left;">This has been altered to allow basic HTML</td></tr><tr><td style="text-align:left;"><code>trigger</code></td><td style="text-align:center;">AlertTriggers</td><td style="text-align:center;">SuccessProcessing</td><td style="text-align:left;">This has been altered to allow basic HTML</td></tr></tbody></table><details class="details custom-block"><summary>Props Not Present</summary><table><thead><tr><th style="text-align:left;">Property</th></tr></thead><tbody><tr><td style="text-align:left;"><code>location</code></td></tr><tr><td style="text-align:left;"><code>model-value</code></td></tr></tbody></table></details><h2 id="buttons" tabindex="-1">Buttons <a class="header-anchor" href="#buttons" aria-label="Permalink to &quot;Buttons&quot;">​</a></h2><p>Style and Display a V-Btn - Can be fully custom button or consist of a <a href="./enums.html#button-types">Button Type</a></p><div class="tip custom-block"><p class="custom-block-title">Props</p><p>Get a full list of props from <a href="https://vuetifyjs.com/en/components/buttons/" target="_blank" rel="noreferrer">Vuetify V-Buttons</a></p></div><h3 id="modified-or-custom-props-2" tabindex="-1">Modified or Custom Props <a class="header-anchor" href="#modified-or-custom-props-2" aria-label="Permalink to &quot;Modified or Custom Props&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>class</code></td><td style="text-align:center;">String</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Classes to add to Button component</td></tr><tr><td style="text-align:left;"><code>order</code></td><td style="text-align:center;">Integer</td><td style="text-align:center;">0</td><td style="text-align:left;">When multiple buttons are present, define an order</td></tr><tr><td style="text-align:left;"><code>tooltip</code></td><td style="text-align:center;">Tooltip</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Add Tooltip to Icon</td></tr></tbody></table><details class="details custom-block"><summary>Props Not Present</summary><table><thead><tr><th style="text-align:left;">Property</th></tr></thead><tbody><tr><td style="text-align:left;"><code>location</code></td></tr><tr><td style="text-align:left;"><code>ripple</code></td></tr></tbody></table></details><h2 id="tooltips" tabindex="-1">Tooltips <a class="header-anchor" href="#tooltips" aria-label="Permalink to &quot;Tooltips&quot;">​</a></h2><p>Style and Display a V-Tooltip</p><div class="tip custom-block"><p class="custom-block-title">Props</p><p>Get a full list of props from <a href="https://vuetifyjs.com/en/components/tooltips/" target="_blank" rel="noreferrer">Vuetify V-Tooltips</a></p></div><details class="details custom-block"><summary>Props Not Present</summary><table><thead><tr><th style="text-align:left;">Property</th></tr></thead><tbody><tr><td style="text-align:left;"><code>activator-props</code></td></tr><tr><td style="text-align:left;"><code>location-strategy</code></td></tr><tr><td style="text-align:left;"><code>model-value</code></td></tr><tr><td style="text-align:left;"><code>origin</code></td></tr></tbody></table></details><h2 id="menu" tabindex="-1">Menu <a class="header-anchor" href="#menu" aria-label="Permalink to &quot;Menu&quot;">​</a></h2><p>Style and Display a V-Menu used for Picker Fields</p><div class="tip custom-block"><p class="custom-block-title">Props</p><p>Get a full list of props from <a href="https://vuetifyjs.com/en/components/menus/" target="_blank" rel="noreferrer">Vuetify V-Menu</a></p></div><h3 id="modified-or-custom-props-3" tabindex="-1">Modified or Custom Props <a class="header-anchor" href="#modified-or-custom-props-3" aria-label="Permalink to &quot;Modified or Custom Props&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>class</code></td><td style="text-align:center;">String</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Classes to add to Button component</td></tr><tr><td style="text-align:left;"><code>order</code></td><td style="text-align:center;">Integer</td><td style="text-align:center;">0</td><td style="text-align:left;">When multiple buttons are present, define an order</td></tr><tr><td style="text-align:left;"><code>tooltip</code></td><td style="text-align:center;">Tooltip</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Add Tooltip to Icon</td></tr></tbody></table><details class="details custom-block"><summary>Props Not Present</summary><table><thead><tr><th style="text-align:left;">Property</th></tr></thead><tbody><tr><td style="text-align:left;"><code>activator-props</code></td></tr><tr><td style="text-align:left;"><code>location-strategy</code></td></tr><tr><td style="text-align:left;"><code>model-value</code></td></tr><tr><td style="text-align:left;"><code>origin</code></td></tr><tr><td style="text-align:left;"><code>transition</code></td></tr></tbody></table></details><h2 id="progress-circular" tabindex="-1">Progress Circular <a class="header-anchor" href="#progress-circular" aria-label="Permalink to &quot;Progress Circular&quot;">​</a></h2><p>Style and Display a V-Progress-Circular</p><div class="tip custom-block"><p class="custom-block-title">Props</p><p>Get a full list of props from <a href="https://vuetifyjs.com/en/components/progress-circular/" target="_blank" rel="noreferrer">Vuetify V-Progress-Circular</a></p></div><h3 id="modified-or-custom-props-4" tabindex="-1">Modified or Custom Props <a class="header-anchor" href="#modified-or-custom-props-4" aria-label="Permalink to &quot;Modified or Custom Props&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>class</code></td><td style="text-align:center;">String</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Classes to add to Progress Circular component</td></tr></tbody></table><details class="details custom-block"><summary>Props Not Present</summary><table><thead><tr><th style="text-align:left;">Property</th></tr></thead><tbody><tr><td style="text-align:left;"><code>model-value</code></td></tr></tbody></table></details><h2 id="progress-linear" tabindex="-1">Progress Linear <a class="header-anchor" href="#progress-linear" aria-label="Permalink to &quot;Progress Linear&quot;">​</a></h2><p>Style and Display a V-Progress-Linear</p><div class="tip custom-block"><p class="custom-block-title">Props</p><p>Get a full list of props from <a href="https://vuetifyjs.com/en/components/progress-linear/" target="_blank" rel="noreferrer">Vuetify V-Progress-Linear</a></p></div><h3 id="modified-or-custom-props-5" tabindex="-1">Modified or Custom Props <a class="header-anchor" href="#modified-or-custom-props-5" aria-label="Permalink to &quot;Modified or Custom Props&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>class</code></td><td style="text-align:center;">String</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Classes to add to Progress Linear component</td></tr></tbody></table><details class="details custom-block"><summary>Props Not Present</summary><table><thead><tr><th style="text-align:left;">Property</th></tr></thead><tbody><tr><td style="text-align:left;"><code>model-value</code></td></tr><tr><td style="text-align:left;"><code>buffer-value</code></td></tr><tr><td style="text-align:left;"><code>clickable</code></td></tr><tr><td style="text-align:left;"><code>max</code></td></tr></tbody></table></details><h2 id="checkbox-item" tabindex="-1">Checkbox Item <a class="header-anchor" href="#checkbox-item" aria-label="Permalink to &quot;Checkbox Item&quot;">​</a></h2><p>Class used for handling checkboxes in CheckboxGroupFields.</p><h3 id="custom-props" tabindex="-1">Custom Props <a class="header-anchor" href="#custom-props" aria-label="Permalink to &quot;Custom Props&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>color</code></td><td style="text-align:center;">String</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Color of checkbox</td></tr><tr><td style="text-align:left;"><code>cols</code></td><td style="text-align:center;">String,Integer</td><td style="text-align:center;">12</td><td style="text-align:left;">How many cols to spread the checkbox across</td></tr><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:center;">String</td><td style="text-align:center;">undefined</td><td style="text-align:left;">ID of the checkbox</td></tr><tr><td style="text-align:left;"><code>label</code></td><td style="text-align:center;">String</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Display label for the checkbox</td></tr><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:center;">Mixed</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Value of the checkbox</td></tr></tbody></table><h2 id="select-item" tabindex="-1">Select Item <a class="header-anchor" href="#select-item" aria-label="Permalink to &quot;Select Item&quot;">​</a></h2><p>Class used for handling items in SelectFields and AutoCompleteFields.</p><h3 id="custom-props-1" tabindex="-1">Custom Props <a class="header-anchor" href="#custom-props-1" aria-label="Permalink to &quot;Custom Props&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:center;">String</td><td style="text-align:center;">undefined</td><td style="text-align:left;">ID of the select item</td></tr><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:center;">Mixed</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Value of the select item</td></tr></tbody></table><h2 id="rule-item" tabindex="-1">Rule Item <a class="header-anchor" href="#rule-item" aria-label="Permalink to &quot;Rule Item&quot;">​</a></h2><p>Class used for handling validation rules.</p><h3 id="custom-props-2" tabindex="-1">Custom Props <a class="header-anchor" href="#custom-props-2" aria-label="Permalink to &quot;Custom Props&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:center;">String</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Name of the validation rule</td></tr><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:center;">Mixed</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Value of the validation</td></tr></tbody></table><h2 id="radio-item" tabindex="-1">Radio Item <a class="header-anchor" href="#radio-item" aria-label="Permalink to &quot;Radio Item&quot;">​</a></h2><p>Class used for handling radio in RadioGroupFields.</p><h3 id="custom-props-3" tabindex="-1">Custom Props <a class="header-anchor" href="#custom-props-3" aria-label="Permalink to &quot;Custom Props&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>color</code></td><td style="text-align:center;">String</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Color of radio</td></tr><tr><td style="text-align:left;"><code>label</code></td><td style="text-align:center;">String</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Display label for the radio</td></tr><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:center;">Mixed</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Value of the radio</td></tr></tbody></table><h2 id="condition-item" tabindex="-1">Condition Item <a class="header-anchor" href="#condition-item" aria-label="Permalink to &quot;Condition Item&quot;">​</a></h2><p>Class used for handling conditionals for displaying <a href="./actions.html#action-icons">Action Icons</a> and <a href="./actions.html#action-button">Action Buttons</a> on the frontend.</p><h3 id="custom-props-4" tabindex="-1">Custom Props <a class="header-anchor" href="#custom-props-4" aria-label="Permalink to &quot;Custom Props&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>check</code></td><td style="text-align:center;">String</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Search additional data provided to the form on load. Check attribute value against below value.</td></tr><tr><td style="text-align:left;"><code>against</code></td><td style="text-align:center;">String</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Search additional data provided to the form on load. Check attribute value against above value.</td></tr><tr><td style="text-align:left;"><code>operator</code></td><td style="text-align:center;">String</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Operator for the check. <code>eg. &quot;!=&quot;, &quot;==&quot;, &quot;&gt;=&quot; etc.</code></td></tr></tbody></table><h2 id="form-loader" tabindex="-1">Form Loader <a class="header-anchor" href="#form-loader" aria-label="Permalink to &quot;Form Loader&quot;">​</a></h2><p>Class for handling how the form loader is styled and it&#39;s type.</p><h3 id="custom-props-5" tabindex="-1">Custom Props <a class="header-anchor" href="#custom-props-5" aria-label="Permalink to &quot;Custom Props&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>type</code></td><td style="text-align:center;">FormLoaderTypes</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Whether this is a Circular or Linear loader</td></tr><tr><td style="text-align:left;"><code>progress</code></td><td style="text-align:center;">ProgressLinear, ProgressCircular</td><td style="text-align:center;">undefined</td><td style="text-align:left;"><a href="#progress-linear">Progress Linear</a> or <a href="#progress-circular">Progress Circular</a></td></tr></tbody></table><h2 id="form-container" tabindex="-1">Form Container <a class="header-anchor" href="#form-container" aria-label="Permalink to &quot;Form Container&quot;">​</a></h2><p>A custom element for displaying the form in.</p><h3 id="custom-props-6" tabindex="-1">Custom Props <a class="header-anchor" href="#custom-props-6" aria-label="Permalink to &quot;Custom Props&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cols</code></td><td style="text-align:center;">Integer</td><td style="text-align:center;">12</td><td style="text-align:left;">Cols to spread the form over (xs).</td></tr><tr><td style="text-align:left;"><code>lg</code></td><td style="text-align:center;">Integer</td><td style="text-align:center;">12</td><td style="text-align:left;">Cols to spread the form over on a large screen</td></tr><tr><td style="text-align:left;"><code>md</code></td><td style="text-align:center;">Integer</td><td style="text-align:center;">12</td><td style="text-align:left;">Cols to spread the form over on a medium screen</td></tr><tr><td style="text-align:left;"><code>sm</code></td><td style="text-align:center;">Integer</td><td style="text-align:center;">12</td><td style="text-align:left;">Cols to spread the form over on a small screen</td></tr></tbody></table><h2 id="load-response" tabindex="-1">Load Response <a class="header-anchor" href="#load-response" aria-label="Permalink to &quot;Load Response&quot;">​</a></h2><p>A custom class for providing data conformity for loading forms in the Axios controller</p><h3 id="custom-props-7" tabindex="-1">Custom Props <a class="header-anchor" href="#custom-props-7" aria-label="Permalink to &quot;Custom Props&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>form</code></td><td style="text-align:center;">InputForm, ActionForm</td><td style="text-align:center;">undefined</td><td style="text-align:left;">The loaded form object.</td></tr><tr><td style="text-align:left;"><code>redirect</code></td><td style="text-align:center;">Boolean,String</td><td style="text-align:center;">false</td><td style="text-align:left;">Should the user be redirected when this response is returned. Set to &quot;reload&quot; to refresh the current page.</td></tr><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:center;">Boolean</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Determines if the load request was successful or failed.</td></tr></tbody></table><h2 id="process-response" tabindex="-1">Process Response <a class="header-anchor" href="#process-response" aria-label="Permalink to &quot;Process Response&quot;">​</a></h2><p>A custom class for providing data conformity when processing forms in the Axios controller</p><h3 id="custom-props-8" tabindex="-1">Custom Props <a class="header-anchor" href="#custom-props-8" aria-label="Permalink to &quot;Custom Props&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>data</code></td><td style="text-align:center;">Mixed</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Data to pass back to the form, this can be displayed in alerts, or if form is expecting results - be passed in a Loader Event</td></tr><tr><td style="text-align:left;"><code>redirect</code></td><td style="text-align:center;">Boolean,String</td><td style="text-align:center;">false</td><td style="text-align:left;">Should the user be redirected when this response is returned. Set to &quot;reload&quot; to refresh the current page.</td></tr><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:center;">Boolean</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Determines if the process request was successful or failed.</td></tr></tbody></table><h2 id="axios" tabindex="-1">Axios <a class="header-anchor" href="#axios" aria-label="Permalink to &quot;Axios&quot;">​</a></h2><p>Class for handling how axios should behave on the frontend.</p><h3 id="custom-props-9" tabindex="-1">Custom Props <a class="header-anchor" href="#custom-props-9" aria-label="Permalink to &quot;Custom Props&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>expecting_results</code></td><td style="text-align:center;">Boolean</td><td style="text-align:center;">true</td><td style="text-align:left;">Data will be pushed via LoaderEvents.Results when successful.</td></tr><tr><td style="text-align:left;"><code>headers</code></td><td style="text-align:center;">Array</td><td style="text-align:center;">Empty</td><td style="text-align:left;">Additional headers to send with every axios request.</td></tr><tr><td style="text-align:left;"><code>multi_part</code></td><td style="text-align:center;">Boolean</td><td style="text-align:center;">false</td><td style="text-align:left;">Required when dealing with files, forms must be set to multi-part.</td></tr></tbody></table><h2 id="additional-data" tabindex="-1">Additional Data <a class="header-anchor" href="#additional-data" aria-label="Permalink to &quot;Additional Data&quot;">​</a></h2><p>Class for handling passing additional data to loading and processing forms.</p><h3 id="custom-props-10" tabindex="-1">Custom Props <a class="header-anchor" href="#custom-props-10" aria-label="Permalink to &quot;Custom Props&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>key</code></td><td style="text-align:center;">String</td><td style="text-align:center;">undefined</td><td style="text-align:left;">Key the value for easy reference when using conditionals.</td></tr><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:center;">Mixed</td><td style="text-align:center;">undefined</td><td style="text-align:left;">The value of the key</td></tr></tbody></table>',85),o=[r];function s(n,i,c,h,y,f){return e(),l("div",null,o)}const u=t(d,[["render",s]]);export{g as __pageData,u as default};
